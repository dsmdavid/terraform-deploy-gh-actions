name: Trigger TF on PR

on:

  pull_request:
    branches: 
      - 'release**'

env:
  AWS_REGION : "eu-west-1" #Change to reflect your Region


permissions: write-all
      # id-token: write   # This is required for requesting the JWT
      # contents: write    # This is required for actions/checkout
      # issues: write

jobs:
  awsAssumeRole:
    runs-on: ubuntu-latest
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v4
      - name: configure aws credentials
        id: creds
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::344768802373:role/dvd_github_action_terraform_state_manager
          #change to reflect your IAM role‚Äôs ARN
          role-session-name: dvd_Github_action
          aws-region: ${{ env.AWS_REGION }}
          output-credentials: true
      - name: Sts GetCallerIdentity
        id: sts
        run: |
          aws sts get-caller-identity
      - name: set up terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.5.7"
      - name: init
        id: tfinit
        env:
          S3_BUCKET: ${{ secrets.S3_BUCKET }}
        run: |
          echo listing envs
          S3_BUCKET_NAME=$(echo | awk -v env_var="$S3_BUCKET" '{print substr(env_var, 6) }')
          echo "**********"
          echo "**********"
          echo "**********"
          terraform init \
          -backend-config="bucket=${S3_BUCKET_NAME}" \
          -backend-config="key=${GITHUB_REF}-${GITHUB_EVENT_NAME}" \
          -backend-config="dynamodb_table=${DYNAMODB_TABLE}" \
          -backend-config="region=${AWS_REGION}"
      - name: terraform-plan
        id: tfplan        
        env:
            S3_BUCKET: ${{ secrets.S3_BUCKET }}
            DBT_CLOUD_TOKEN: ${{ secrets.DBT_CLOUD_TOKEN }}
            DBT_CLOUD_ACCOUNT_ID: ${{ secrets.DBT_CLOUD_ACCOUNT_ID }}
        run: |
          echo "hello from terraform-plan"
          terraform plan -out=tfplan
      # - name: create artifact
      #   env:
      #     PR_NUMBER: ${{ github.event.number }}
      #     PLAN: "terraform\n${{ steps.tfplan.outputs.stdout }}"
      #   run: |
      #     echo $PLAN >> tfplan
      - name: Save Artifact
        id: save-artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ github.event.number }}-tf-plan
          path: tfplan
      - name: Comment Plan
        id: comment-plan
        uses: peter-evans/create-or-update-comment@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.number }}
          body: |
            Terraform Plan:
  
            ```
            ${{ steps.tfplan.outputs.stdout }}
            ```
  
            Plan saved to GH artifacts.
      - name: Add comment to the PR
        uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Initialization ‚öôÔ∏è\`${{ steps.tfinit.outcome }}\`

            #### Terraform Plan üìñ\`${{ steps.tfplan.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`

            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Workflow: \`${{ github.workflow }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      # - name: terraform-apply        
      #   env:
      #       S3_BUCKET: ${{ secrets.S3_BUCKET }}
      #       DBT_CLOUD_TOKEN: ${{ secrets.DBT_CLOUD_TOKEN }}
      #       DBT_CLOUD_ACCOUNT_ID: ${{ secrets.DBT_CLOUD_ACCOUNT_ID }}
      #   run: |
      #     echo "hello from terraform-plan"
      #     terraform apply -auto-approve
      #     echo "%%%%%%%"
      #     echo "SUCCESS"
      #     echo "%%%%%%%"
