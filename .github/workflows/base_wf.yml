# This is a basic workflow to help you get started with Actions
name: Connect to an AWS role from a GitHub repository

# Controls when the action will run. Invokes the workflow on push events but only for the main branch
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  
  AWS_REGION : "eu-west-1" #Change to reflect your Region

# Permission can be added at job level or workflow level    
permissions:
      id-token: write   # This is required for requesting the JWT
      contents: read    # This is required for actions/checkout
jobs:
  aws-assume-role:
    runs-on: ubuntu-latest
    outputs:
      aws-access-key-id: ${{ steps.creds.outputs.aws-access-key-id }}
      aws-secret-access-key: ${{ steps.creds.outputs.aws-secret-access-key }}
      aws-session-token: ${{ steps.creds.outputs.aws-session-token }}
      test-output: ${{ steps.sts.outputs.test }}

    steps:
    #   - name: Git clone the repository
    #     uses: actions/checkout@v3
      - name: configure aws credentials
        id: creds
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::344768802373:role/dvd_github_action_terraform_state_manager
          #change to reflect your IAM roleâ€™s ARN
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ env.AWS_REGION }}
          output-credentials: true
      # Hello from AWS: WhoAmI
      - name: Sts GetCallerIdentity
        id: sts
        run: |
          aws sts get-caller-identity
          echo "test=hello" >> "$GITHUB_OUTPUT"
      - name: list items in bucket
        env:
            S3_BUCKET: ${{ secrets.S3_BUCKET }}
        run: |
          aws s3 ls "$S3_BUCKET"

  terraform-plan:
    runs-on: ubuntu-latest
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v3

      - name: set up terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.5.7"

      - name: terraform-plan
        env:
            AWS_REGION:  ${{ env.AWS_REGION }}
            AWS_ACCESS_KEY_ID: ${{ needs.aws-assume-role.outputs.aws-access-key-id }}
            AWS_SECRET_ACCESS_KEY: ${{ needs.aws-assume-role.outputs.aws-secret-access-key }}
            TEST: ${{ needs.aws-assume-role.outputs.test-output }}
        run: |
          echo "hello from terraform-plan"
          echo "$AWS_REGION $AWS_ACCESS_KEY_ID $TEST"
          aws s3 ls "$S3_BUCKET"