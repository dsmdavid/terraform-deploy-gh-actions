name: Trigger TF on PR

# Controls when the action will run. Invokes the workflow on push events but only for the main branch
on:
  # push:
  #   branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  AWS_REGION : "eu-west-1" #Change to reflect your Region


# Permission can be added at job level or workflow level    
permissions:
      id-token: write   # This is required for requesting the JWT
      contents: read    # This is required for actions/checkout

jobs:
  awsAssumeRole:
    runs-on: ubuntu-latest
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v4
      - name: configure aws credentials
        id: creds
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::344768802373:role/dvd_github_action_terraform_state_manager
          #change to reflect your IAM roleâ€™s ARN
          role-session-name: dvd_Github_action
          aws-region: ${{ env.AWS_REGION }}
          output-credentials: true
      - name: Sts GetCallerIdentity
        id: sts
        run: |
          aws sts get-caller-identity
      # - name: list items in bucket
      #   env:
      #       S3_BUCKET: ${{ secrets.S3_BUCKET }}
      #   run: |
      #     aws s3 ls "$S3_BUCKET"
      - name: set up terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.5.7"
      - name: init
        env:
          S3_BUCKET: ${{ secrets.S3_BUCKET }}
          
        run: |
          echo listing envs
          S3_BUCKET_NAME=$(echo | awk -v env_var="$S3_BUCKET" '{print substr(env_var, 6) }')
          env
          echo "**********"
          echo "**********"
          echo "**********"
          terraform init \
          -backend-config="bucket=${S3_BUCKET_NAME}" \
          -backend-config="key=${GITHUB_REF}-${GITHUB_EVENT_NAME}" \
          -backend-config="dynamodb_table=${DYNAMODB_TABLE}" \
          -backend-config="region=${AWS_REGION}"
      - name: terraform-plan        
        env:
            S3_BUCKET: ${{ secrets.S3_BUCKET }}
            DBT_CLOUD_TOKEN: ${{ secrets.DBT_CLOUD_TOKEN }}
            DBT_CLOUD_ACCOUNT_ID: ${{ secrets.DBT_CLOUD_ACCOUNT_ID }}
        run: |
          echo "hello from terraform-plan"
          terraform plan
      - name: terraform-apply        
        env:
            S3_BUCKET: ${{ secrets.S3_BUCKET }}
            DBT_CLOUD_TOKEN: ${{ secrets.DBT_CLOUD_TOKEN }}
            DBT_CLOUD_ACCOUNT_ID: ${{ secrets.DBT_CLOUD_ACCOUNT_ID }}
        run: |
          echo "hello from terraform-plan"
          terraform apply -auto-approve
          echo "%%%%%%%"
          echo "SUCCESS"
          echo "%%%%%%%"
          terraform destroy -auto-approve
