name: Create PR on PUSH to PRERELEASE branch

on:
  push:
    branches:
      - 'prerelease**'


jobs:
  job1:
    runs-on: ubuntu-latest
    outputs:
      ORIGINAL_BRANCH_NAME: ${{ steps.inputs.outputs.original_branch_name }}
      NEW_BRANCH_NAME: ${{ steps.inputs.outputs.new_branch_name }}
    steps:
      - name: validate inputs
        id: inputs
        run: |
          [[ "$GITHUB_REF" =~ ^refs\/heads\/pre[a-z]+__[a-zA-Z0-9\_]+__[a-zA-Z0-9\_]+$ ]] && echo "branch name matches validation" || (echo "Invalid branch name, must be `prerelease__PROJECT_NAME__ENVIRONMENT`" && exit 1)
          echo "%%^^^&&&^^^%%"
          export NEW_BRANCH_NAME=$(echo $GITHUB_REF | sed -E "s/refs\/heads\/pre([a-z]+__[a-zA-Z0-9\_]+__[a-zA-Z0-9\_]+)/\1/" )
          export ORIGINAL_BRANCH_NAME=$(echo $GITHUB_REF | sed -E "s/refs\/heads\/(pre[a-z]+__[a-zA-Z0-9\_]+__[a-zA-Z0-9\_]+)/\1/" )
          echo "new_branch_name=$NEW_BRANCH_NAME" >> "$GITHUB_OUTPUT"
          echo "original_branch_name=$ORIGINAL_BRANCH_NAME"  >> "$GITHUB_OUTPUT"

      - name: Git clone the repository
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0
      - id: checkout
        name: create new branch
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ORIGINAL_BRANCH_NAME: ${{ steps.inputs.outputs.original_branch_name }}
          NEW_BRANCH_NAME: ${{ steps.inputs.outputs.new_branch_name }}
        run: |
          git checkout -b $NEW_BRANCH_NAME
          git push -u origin $NEW_BRANCH_NAME
      - name: create PR
        id: create-pr
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ORIGINAL_BRANCH_NAME: ${{ steps.inputs.outputs.original_branch_name }}
          NEW_BRANCH_NAME: ${{ steps.inputs.outputs.new_branch_name }}
        run: |
          outcome=$(gh pr create --title "Create infra for ${NEW_BRANCH_NAME}" \
          --base $NEW_BRANCH_NAME --head $ORIGINAL_BRANCH_NAME \
          --body "Sample PR" \
          --reviewer dsmdavid 2>&1 1>/dev/null)
          echo $outcome